<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.ninng.mapper.ConfigMapper">

    <resultMap id="BaseResultMap" type="top.ninng.entity.Config">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="key" column="key" jdbcType="VARCHAR"/>
        <result property="value" column="value" jdbcType="VARCHAR"/>
        <result property="info" column="info" jdbcType="VARCHAR"/>
        <result property="defaultValue" column="default_value" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,key,value,
        info,default_value
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from config
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectAll" resultType="top.ninng.entity.Config" resultMap="BaseResultMap">
        select *
        from config
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from config
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="top.ninng.entity.Config" useGeneratedKeys="true">
        insert into config
        ( id, key, value
        , info, default_value)
        values ( #{id,jdbcType=INTEGER}, #{key,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}
               , #{info,jdbcType=VARCHAR}, #{defaultValue,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="top.ninng.entity.Config"
            useGeneratedKeys="true">
        insert into config
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="key != null">key,</if>
            <if test="value != null">value,</if>
            <if test="info != null">info,</if>
            <if test="defaultValue != null">default_value,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=INTEGER},</if>
            <if test="key != null">#{key,jdbcType=VARCHAR},</if>
            <if test="value != null">#{value,jdbcType=VARCHAR},</if>
            <if test="info != null">#{info,jdbcType=VARCHAR},</if>
            <if test="defaultValue != null">#{defaultValue,jdbcType=VARCHAR},</if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="top.ninng.entity.Config">
        update config
        <set>
            <if test="key != null">
                `key` = #{key,jdbcType=VARCHAR},
            </if>
            <if test="value != null">
                value = #{value,jdbcType=VARCHAR},
            </if>
            <if test="info != null">
                info = #{info,jdbcType=VARCHAR},
            </if>
            <if test="defaultValue != null">
                default_value = #{defaultValue,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="top.ninng.entity.Config">
        update config
        set key           = #{key,jdbcType=VARCHAR},
            value         = #{value,jdbcType=VARCHAR},
            info          = #{info,jdbcType=VARCHAR},
            default_value = #{defaultValue,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>
