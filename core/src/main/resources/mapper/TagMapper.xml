<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.ninng.mapper.TagMapper">

    <resultMap id="BaseResultMap" type="top.ninng.entity.Tag">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="deleteStatus" column="delete_status" jdbcType="BIT"/>
        <result property="type" column="type" jdbcType="TINYINT"/>
        <result property="status" column="status" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,name,create_time,
        update_time,delete_status,type,
        status
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tag
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectAll" resultType="top.ninng.entity.Tag">
        select
        <include refid="Base_Column_List"/>
        from tag
        order by name
    </select>

    <select id="selectIdByName" resultType="java.lang.Long">
        select id
        from tag
        where name = #{tagName,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from tag
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <delete id="deleteByName" parameterType="java.lang.Long">
        delete
        from tag
        where name = #{tagName,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="top.ninng.entity.Tag"
            useGeneratedKeys="true">
        insert into tag
        ( id, name, create_time
        , update_time, delete_status, type
        , status)
        values ( #{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
               , #{updateTime,jdbcType=TIMESTAMP}, #{deleteStatus,jdbcType=BIT}, #{type,jdbcType=TINYINT}
               , #{status,jdbcType=TINYINT})
    </insert>

    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="top.ninng.entity.Tag"
            useGeneratedKeys="true">
        insert into tag
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="name != null">name,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="deleteStatus != null">delete_status,</if>
            <if test="type != null">type,</if>
            <if test="status != null">status,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=INTEGER},</if>
            <if test="name != null">#{name,jdbcType=VARCHAR},</if>
            <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
            <if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if>
            <if test="deleteStatus != null">#{deleteStatus,jdbcType=BIT},</if>
            <if test="type != null">#{type,jdbcType=TINYINT},</if>
            <if test="status != null">#{status,jdbcType=TINYINT},</if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="top.ninng.entity.Tag">
        update tag
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteStatus != null">
                delete_status = #{deleteStatus,jdbcType=BIT},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="top.ninng.entity.Tag">
        update tag
        set name          = #{name,jdbcType=VARCHAR},
            create_time   = #{createTime,jdbcType=TIMESTAMP},
            update_time   = #{updateTime,jdbcType=TIMESTAMP},
            delete_status = #{deleteStatus,jdbcType=BIT},
            type          = #{type,jdbcType=TINYINT},
            status        = #{status,jdbcType=TINYINT}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>
